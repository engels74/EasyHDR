[package]
name = "easyhdr"
version = "0.1.0"
edition = "2024"
rust-version = "1.85"
resolver = "2"
authors = ["EasyHDR Contributors"]
description = "Automatic HDR management for Windows"
license = "AGPL-3.0-only"

[lib]
name = "easyhdr"
path = "src/lib.rs"

[[bin]]
name = "easyhdr"
path = "src/main.rs"

[dependencies]
# GUI
slint = "1.13"

# Serialization
serde = { version = "1.0", features = ["derive"] }
serde_json = "1.0"

# Utilities
uuid = { version = "1.18", features = ["v4", "serde"] }
thiserror = "2.0"
anyhow = "1.0"

# Logging
tracing = "0.1"
tracing-subscriber = { version = "0.3", features = ["env-filter", "fmt"] }
tracing-appender = "0.2"

# Concurrency
parking_lot = "0.12"

# Windows-specific dependencies
[target.'cfg(windows)'.dependencies]
windows = { version = "0.62", features = [
    "Win32_Foundation",
    "Win32_Graphics_Gdi",
    "Win32_Security",
    "Win32_System_Diagnostics_ToolHelp",
    "Win32_System_SystemInformation",
    "Win32_System_LibraryLoader",
    "Win32_UI_Shell",
    "Win32_UI_WindowsAndMessaging",
    "Win32_Storage_FileSystem",
    "Win32_System_ProcessStatus",
    "Win32_System_Threading",
] }
winreg = "0.55"
tray-icon = "0.21"
rfd = "0.15"  # File dialogs
tauri-winrt-notification = "0.7"  # Windows toast notifications
image = { version = "0.25", default-features = false, features = ["ico"] }  # ICO decoding for tray icons

[build-dependencies]
slint-build = "1.13"

[target.'cfg(windows)'.build-dependencies]
winres = "0.1"

[dev-dependencies]
proptest = "1.5"
tempfile = "3.14"
criterion = "0.5"

[[bench]]
name = "config"
harness = false

[[bench]]
name = "hdr_detection"
harness = false

[profile.release]
opt-level = "z"     # Optimize for size
lto = true          # Link-time optimization
codegen-units = 1   # Better optimization
strip = true        # Strip symbols
panic = "abort"     # Smaller binary

[profile.dev]
opt-level = 1       # Some optimization for dev builds

[profile.profiling]
inherits = "release"
debug = true        # Keep debug info for profiling
strip = false       # Don't strip symbols for profiling tools
# Build with: RUSTFLAGS="-C force-frame-pointers=yes" cargo build --profile profiling

[lints.rust]
unsafe_code = "warn"
missing_docs = "warn"

[lints.clippy]
all = { level = "warn", priority = -1 }
pedantic = { level = "warn", priority = -1 }
# Allow specific pedantic lints that are too noisy or not applicable
module_name_repetitions = "allow"
missing_errors_doc = "allow"
missing_panics_doc = "allow"
must_use_candidate = "allow"
