// Main window UI definition for EasyHDR
// Implements task 9.1: Create main window UI definition
// Requirements: 5.1, 5.2, 5.3, 5.4, 5.8, 5.9

import { Button, ListView, CheckBox } from "std-widgets.slint";

// AppListItem struct represents a configured application in the list
// Fields: id (UUID), display-name (app name), exe-path (full path), enabled (checkbox state), icon (app icon)
export struct AppListItem {
    id: string,
    display-name: string,
    exe-path: string,
    enabled: bool,
    icon: image,
}

export component MainWindow inherits Window {
    title: "EasyHDR";
    preferred-width: 600px;
    preferred-height: 500px;

    // Properties
    in-out property <[AppListItem]> app-list: [];
    in-out property <bool> hdr-enabled: false;
    in-out property <int> selected-index: -1;

    // Callbacks
    callback add-application();
    callback remove-application(int);
    callback toggle-enabled(int, bool);
    callback minimize-to-tray();

    VerticalLayout {
        padding: 16px;
        spacing: 12px;

        // HDR Status indicator (Requirement 5.8)
        // Shows colored circle (green for ON, red for OFF) and text label
        HorizontalLayout {
            spacing: 8px;
            Text {
                text: "HDR Status:";
                font-size: 14px;
            }
            Rectangle {
                width: 16px;
                height: 16px;
                border-radius: 8px;
                background: hdr-enabled ? #00ff00 : #ff0000;
            }
            Text {
                text: hdr-enabled ? "ON" : "OFF";
                font-size: 14px;
                font-weight: 700;
            }
        }

        // Application list container (Requirements 5.2, 5.3, 5.4)
        // Task 9.2: Implement application list display with proper styling
        Rectangle {
            border-width: 1px;
            border-color: #cccccc;
            border-radius: 4px;

            // Empty state message (Requirement 5.4)
            if app-list.length == 0: Text {
                text: "No applications configured. Click 'Add Application' to get started.";
                horizontal-alignment: center;
                vertical-alignment: center;
            }

            // Scrollable ListView for application list (Requirements 5.2, 5.3)
            if app-list.length > 0: ListView {
                for item[index] in app-list: VerticalLayout {
                    // List item row with visual highlight for selection
                    Rectangle {
                        // Visual highlight for selected row
                        background: selected-index == index ? #e0e0e0 : Colors.transparent;

                        // Touch area for row click handling - covers entire row
                        TouchArea {
                            clicked => {
                                selected-index = index;
                            }
                        }

                        HorizontalLayout {
                            spacing: 8px;
                            padding: 8px;

                            // Application icon (32x32)
                            Image {
                                source: item.icon;
                                width: 32px;
                                height: 32px;
                            }

                            // Application name and path with truncation
                            VerticalLayout {
                                spacing: 2px;

                                Text {
                                    text: item.display-name;
                                    font-weight: 600;
                                    font-size: 13px;
                                    overflow: elide;
                                }
                                Text {
                                    text: item.exe-path;
                                    font-size: 11px;
                                    color: #666666;
                                    overflow: elide;
                                }
                            }

                            // Spacer to push checkbox to the right
                            Rectangle {
                                horizontal-stretch: 1;
                            }

                            // Enabled checkbox aligned to the right
                            CheckBox {
                                checked: item.enabled;
                                toggled => {
                                    toggle-enabled(index, self.checked);
                                }
                            }
                        }
                    }

                    // Row separator line
                    Rectangle {
                        height: 1px;
                        background: #e5e5e5;
                    }
                }
            }
        }

        // Bottom toolbar with buttons (Requirement 5.9)
        HorizontalLayout {
            spacing: 8px;
            Button {
                text: "Add Application";
                clicked => {
                    add-application();
                }
            }
            Button {
                text: "Remove Selected";
                enabled: selected-index >= 0;
                clicked => {
                    remove-application(selected-index);
                }
            }
        }
    }
}

